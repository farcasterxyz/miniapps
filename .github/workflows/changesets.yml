name: Changesets
on:
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  verify:
    name: Verify
    uses: ./.github/workflows/verify.yml
    secrets: inherit

  changesets:
    name: Create version pull request
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0
          submodules: 'recursive'

      - name: Install dependencies
        uses: ./.github/actions/install-dependencies

      - name: Sanity-check token
        run: |
          echo "//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}" >> ~/.npmrc
          echo "👤 npm user    : $(npm whoami)"
          echo "🏢 org members : $(npm org ls @farcaster --json)"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Assert publish rights to @farcaster
        run: |
          set -euo pipefail
          tmp=$(mktemp -d)
          cd "$tmp"
          pkg="@farcaster/ci-permission-test-${GITHUB_RUN_ID}"
          npm init -y >/dev/null
          npm pkg set name="$pkg" version=0.0.0-ci-$GITHUB_RUN_NUMBER \
                       publishConfig.access=public
          echo "console.log('ok');" > index.js

          echo "🚀 attempting first‑publish of $pkg"
          npm publish --tag ci-check --access public

          echo "🧹 unpublishing test package again"
          npm unpublish "$pkg" --force   # allowed < 72 h after publish

      - name: PR or publish
        uses: changesets/action@06245a4e0a36c064a573d4150030f5ec548e4fcc
        with:
          title: 'chore: version packages'
          commit: 'chore: version packages'
          createGithubReleases: ${{ github.ref == 'refs/heads/main' }}
          publish: pnpm changeset:publish
          version: pnpm changeset:version
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.REPO_SCOPED_TOKEN }}

      - name: Publish prerelease
        if: steps.changesets.outputs.published != 'true'
        continue-on-error: true
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.REPO_SCOPED_TOKEN }}
        run: |
          npm config set "//registry.npmjs.org/:_authToken" "$NPM_TOKEN"
          git reset --hard origin/main
          pnpm clean
          pnpm changeset version --no-git-tag --snapshot canary
          pnpm changeset:prepublish
          pnpm changeset publish --no-git-tag --snapshot canary --tag canary
